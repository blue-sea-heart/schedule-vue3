package com.blueseaheart.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ScheduleStatusAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleStatusAllPropertiesEquals(ScheduleStatus expected, ScheduleStatus actual) {
        assertScheduleStatusAutoGeneratedPropertiesEquals(expected, actual);
        assertScheduleStatusAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleStatusAllUpdatablePropertiesEquals(ScheduleStatus expected, ScheduleStatus actual) {
        assertScheduleStatusUpdatableFieldsEquals(expected, actual);
        assertScheduleStatusUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleStatusAutoGeneratedPropertiesEquals(ScheduleStatus expected, ScheduleStatus actual) {
        assertThat(actual)
            .as("Verify ScheduleStatus auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleStatusUpdatableFieldsEquals(ScheduleStatus expected, ScheduleStatus actual) {
        assertThat(actual)
            .as("Verify ScheduleStatus relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getColor()).as("check color").isEqualTo(expected.getColor()))
            .satisfies(a -> assertThat(a.getSortNo()).as("check sortNo").isEqualTo(expected.getSortNo()))
            .satisfies(a -> assertThat(a.getIsDefault()).as("check isDefault").isEqualTo(expected.getIsDefault()))
            .satisfies(a -> assertThat(a.getIsTerminal()).as("check isTerminal").isEqualTo(expected.getIsTerminal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleStatusUpdatableRelationshipsEquals(ScheduleStatus expected, ScheduleStatus actual) {
        // empty method
    }
}
