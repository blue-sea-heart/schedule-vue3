package com.blueseaheart.demo.domain;

import static com.blueseaheart.demo.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class InAppNotificationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInAppNotificationAllPropertiesEquals(InAppNotification expected, InAppNotification actual) {
        assertInAppNotificationAutoGeneratedPropertiesEquals(expected, actual);
        assertInAppNotificationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInAppNotificationAllUpdatablePropertiesEquals(InAppNotification expected, InAppNotification actual) {
        assertInAppNotificationUpdatableFieldsEquals(expected, actual);
        assertInAppNotificationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInAppNotificationAutoGeneratedPropertiesEquals(InAppNotification expected, InAppNotification actual) {
        assertThat(actual)
            .as("Verify InAppNotification auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInAppNotificationUpdatableFieldsEquals(InAppNotification expected, InAppNotification actual) {
        assertThat(actual)
            .as("Verify InAppNotification relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a ->
                assertThat(a.getCreatedAt())
                    .as("check createdAt")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getCreatedAt())
            )
            .satisfies(a -> assertThat(a.getRead()).as("check read").isEqualTo(expected.getRead()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInAppNotificationUpdatableRelationshipsEquals(InAppNotification expected, InAppNotification actual) {
        // empty method
    }
}
